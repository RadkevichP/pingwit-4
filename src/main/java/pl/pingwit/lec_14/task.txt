Task 1
Создайте свое собственное проверяемое исключение. Создайте класс интерфейс DatabaseConnector,
в котором есть один метод - connectToDatabase, который принимает в качестве аргумента строку-название базы данных.
В сигнатуре этого метода укажите, что он может бросать ваше исключение.
Создайте класс, который имплементирует этот интерфейс (в случае, когда у интерфейса одна имплеметация, можно назвать его
DatabaseConnectorImpl.
Этот класс должен рандомно подключаться к базе данных или брость исключение.
В классе Application создайте объект коннектора и вызовите метод connct. Обработайте исключение с помощью try-catch-finally

Task 2
Создайте свое непроверяемое исключение.
Создайте класс Printer с тремя методами: turnOn(), print(String document), turnOff().
Метод print должен рандомно либо бросать ваше непроверяемое исключение, либо выводить в консоль строку.
В классе Application создайте принтер, включите его и распечатайте любую строку. Обработайте ситуацию с ошибкой с
помощью блока finally, в котором выключите принтер. Блок catch в этом задании не используйте.

Task 3
В классе Application создайте строки: '2023-17-01', '23-2022-01', '15-07-2022'.
Распарсите эти строки в объекты LocalDate, используя DateTime formatter.
Каждую полученную дату выведите в консоль в нескольких форматах:
01-Mar-2022, Mar-01-2022, 2022-01-Mar, 01-March-2022
Создайте объект LocalDateTime и выведите его в консоль в каком-то нетипичном формате на ваше усмотрение.

Task 4*
Создайте класс Person, в котором хранится имя, фамилия, дата рождения и любимый день недели (используйте классы из пакета
java.time).
Представим, что вам пришли данные из другой системы и вам нужно преобразовать их в объекты типа Pesron.
В классе Application создайте строку:
"Fedor, Petrov, 7, 1980-25-02; Peter, Parker, 4, 1970-01-01; Inna, Filatova, 6, 1994-02-10" (имя, фамилия, номер любимого дня, дата рождения)
    1. Напишите метод, который распарсит (преобразует) эту строку в массив обхектов Person.
    2. Вынесите данный метод в класс PersonParser, в классе Application создавайте объект этого типа и работайте с ним.
    3. Измените входные данные на "Fedor, Petrov, 7, 1980-25-02; Maks, Ermolaev, 12, 1987-02-03; Peter, Parker, 4, 1970-01-01; Inna, Filatova, 6, 1994-02-10"
    обработайте полученную ошибку в классе PersonParser таким образом, чтобы программа не прерывала работу

